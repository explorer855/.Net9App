services:

   identityapi:
    image: ${DOCKER_REGISTRY-}identityapi
    restart: always
    build:
      context: .
      dockerfile: src/IdentityApi/Dockerfile
    ports:
      - "7000:80"
    networks:
      - backend-gateway

   catalogapi:
    image: ${DOCKER_REGISTRY-}catalogapi
    restart: always
    build:
      context: .
      dockerfile: src/CatalogApi/Dockerfile
    ports:
      - "7001:80"
    networks:
      - backend-gateway

   ordersapi:
    image: ${DOCKER_REGISTRY-}ordersapi
    restart: always
    build:
      context: .
      dockerfile: src/OrdersApi/Dockerfile
    environment:
       - RabbitMQ__Host=amqp://rabbitmq-queue:5672
       - RabbitMQ__UserName=user
       - RabbitMQ__Password=password
       - Docker__Enabled=true
    ports:
      - "7002:80"
    networks:
      - backend-gateway
    depends_on:
      - rabbitmq_broker
    
   rabbitmq_broker:
    image: rabbitmq:3-management
    restart: always
    hostname: rabbitmq-queue
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
        RABBITMQ_DEFAULT_USER: user
        RABBITMQ_DEFAULT_PASS: password
    volumes:
       - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend-gateway     

   outboxbackgroundapp:
    image: ${DOCKER_REGISTRY-}outboxbackgroundapp
    restart: always
    build:
      context: .
      dockerfile: src/OutboxBackgroundApp/Dockerfile
    environment:
       - RabbitMQ__Host=amqp://rabbitmq-queue:5672
       - RabbitMQ__UserName=user
       - RabbitMQ__Password=password
       - Docker__Enabled=true 
    ports:
      - "7003:80"
    networks:
      - backend-gateway
    depends_on:
      - rabbitmq_broker




volumes:
  rabbitmq_data:

networks:
  backend-gateway: {}
